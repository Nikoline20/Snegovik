import os
import aiohttp

CLIENT_ID = os.getenv("CLIENT_ID")
CLIENT_SECRET = os.getenv("CLIENT_SECRET")
CHANNEL = os.getenv("CHANNEL")  # –∫–∞–Ω–∞–ª –∏–∑ .env

# --- —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –∏ —Ç–µ–∫—Å—Ç–æ–≤ ---
GAME_RESPONSES = {
    "STALCRAFT: X": "–ù–∏–∫: –•–ö–ª–∏–•  –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞: –†—É–±–µ–∂",
    "League of Legends": "–ù–∏–∫: Snegurka666",
    "Genshin Impact": "UID: 747598589",
    "Honkai: Star Rail": "UID: 714798751",
    "Wuthering Waves": "UID: 600762760"
}


# --- –ø–æ–ª—É—á–∞–µ–º app token ---
async def get_app_token(session):
    url = "https://id.twitch.tv/oauth2/token"
    params = {
        "client_id": CLIENT_ID,
        "client_secret": CLIENT_SECRET,
        "grant_type": "client_credentials"
    }
    async with session.post(url, params=params) as resp:
        js = await resp.json()
        return js.get("access_token")


async def run(ctx):
    bot = ctx.bot
    session = bot.session

    token = await get_app_token(session)
    if not token:
        await ctx.send("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Twitch API.")
        return

    headers = {
        "Client-ID": CLIENT_ID,
        "Authorization": f"Bearer {token}"
    }

    # --- –ø–æ–ª—É—á–∞–µ–º id –∫–∞–Ω–∞–ª–∞ ---
    async with session.get(
        "https://api.twitch.tv/helix/users",
        headers=headers,
        params={"login": CHANNEL}
    ) as resp:
        js = await resp.json()
        if not js.get("data"):
            await ctx.send("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª.")
            return
        broadcaster_id = js["data"][0]["id"]

    # --- –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É ---
    async with session.get(
        "https://api.twitch.tv/helix/channels",
        headers=headers,
        params={"broadcaster_id": broadcaster_id}
    ) as resp:
        js = await resp.json()
        if not js.get("data"):
            await ctx.send("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–Ω–∞–ª–µ.")
            return
        current_game = js["data"][0]["game_name"]

    # --- –ø—Ä–æ–≤–µ—Ä–∫–∞ ---
    if current_game in GAME_RESPONSES:
        await ctx.send(GAME_RESPONSES[current_game])
    else:
        await ctx.send("–ü–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –Ω–∏–∫–∞ –¥–ª—è —ç—Ç–æ–π –∏–≥—Ä—ã –Ω–µ—Ç üò¢")